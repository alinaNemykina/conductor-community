plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'java'
    id 'groovy'
}

dependencies {

    implementation "com.netflix.conductor:conductor-common:${revConductor}"
    implementation project(':conductor-client-kotlin')

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${revCoroutines}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.google.guava:guava:${revGuava}"
    implementation "cglib:cglib:3.3.0"
    implementation "com.sun.jersey:jersey-client:${revJersey}"
    implementation "javax.ws.rs:javax.ws.rs-api:${revJAXRS}"
    implementation "org.glassfish.jersey.core:jersey-common:${revJerseyCommon}"

    testImplementation "org.springframework:spring-web"
    testImplementation "org.spockframework:spock-core:${revSpock}"
    testImplementation "org.spockframework:spock-spring:${revSpock}"

    testImplementation "com.fasterxml.jackson.core:jackson-core"
    testImplementation "org.apache.commons:commons-lang3"

    testImplementation "org.codehaus.groovy:groovy-all:${revGroovy}"

}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}
sourceSets.main.java.srcDirs += ['example/java', 'example/resources']

